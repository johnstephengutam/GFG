package com.day1;

public class TrappingRainWater_2 {
	//O(N)
	public static int left_max(int[] arr, int n, int i){
		int left_max = 0;
		for(int j = 0; j < i; j++){
			if(arr[j] > left_max)
				left_max = arr[j];
		}
		return left_max;
	}
	
	//O(N)
	public static int right_max(int[] arr, int n, int i){
		int right_max = 0;
		for(int j = n-1; j > i ; j--){
			if(arr[j] > right_max  )
				right_max = arr[j];
		}
		return right_max;
	}
	
	//O(N * N)
	public static int trappedWater_bruteforce(int[] arr, int n){
		int ans = 0;
		for(int i = 1; i < n-1; i++){
			ans = ans + Math.min(left_max(arr,n,i), right_max(arr,n,i)) - arr[i];
		}
		return ans;
	}
	
	//==========================
	
	public static int trappedWater_bruteforce(int[] arr, int n){
		int ans = 0;
		for(int i = 1; i < n-1; i++){
			ans = ans + Math.min(left_max(arr,n,i), right_max(arr,n,i)) - arr[i];
		}
		return ans;
	}
	
	public static void main(String[] args) {
		int arr[] = {1,3,3,3,1};//{3,0,2,0,4};
		int ans = trappedWater_bruteforce(arr, arr.length);
		if(ans <= 0)
			System.out.println("No trapped water " + ans);
		else
		 System.out.println(ans);
	}
}
